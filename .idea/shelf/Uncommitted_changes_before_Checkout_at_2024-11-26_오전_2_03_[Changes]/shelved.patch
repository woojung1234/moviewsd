Index: moviewsd/src/components/MovieGrid.vue
===================================================================
diff --git a/moviewsd/src/components/MovieGrid.vue b/moviewsd/src/components/MovieGrid.vue
--- a/moviewsd/src/components/MovieGrid.vue	(revision 90f72503ed57f154bb86d80fc8d76efed5abd3ce)
+++ b/moviewsd/src/components/MovieGrid.vue	(date 1732553725580)
@@ -1,0 +1,28 @@
+<template>
+  <div class="movie-grid">
+    <MovieCard
+        v-for="movie in movies"
+        :key="movie.id"
+        :movie="movie"
+    />
+  </div>
+</template>
+
+<script setup>
+import { defineProps } from "vue";
+import MovieCard from "@/components/MovieCard.vue";
+
+defineProps({
+  movies: Array,
+});
+</script>
+
+<style scoped>
+.movie-grid {
+  display: grid;
+  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
+  gap: 20px;
+  padding: 20px;
+  justify-content: center;
+}
+</style>
Index: moviewsd/src/components/Pagination.vue
===================================================================
diff --git a/moviewsd/src/components/Pagination.vue b/moviewsd/src/components/Pagination.vue
--- a/moviewsd/src/components/Pagination.vue	(revision 90f72503ed57f154bb86d80fc8d76efed5abd3ce)
+++ b/moviewsd/src/components/Pagination.vue	(date 1732553483629)
@@ -1,0 +1,67 @@
+<template>
+  <div class="pagination">
+    <button @click="changePage('previous')" :disabled="currentPage === 1">이전</button>
+    <span>페이지 {{ currentPage }}</span>
+    <button @click="changePage('next')" :disabled="currentPage * itemsPerPage >= totalResults">다음</button>
+  </div>
+</template>
+
+<script setup>
+const props = defineProps({
+  currentPage: {
+    type: Number,
+    required: true,
+  },
+  itemsPerPage: {
+    type: Number,
+    required: true,
+  },
+  totalResults: {
+    type: Number,
+    required: true,
+  },
+});
+
+const emits = defineEmits(["page-changed"]);
+
+const changePage = (direction) => {
+  const newPage = direction === "previous" ? props.currentPage - 1 : props.currentPage + 1;
+  emits("page-changed", newPage);
+};
+</script>
+
+<style scoped>
+.pagination {
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  margin: 20px 0;
+}
+
+button {
+  margin: 0 10px;
+  padding: 10px 20px;
+  background-color: #42b983;
+  color: white;
+  border: none;
+  border-radius: 4px;
+  cursor: pointer;
+  font-size: 14px;
+  transition: background-color 0.3s ease, transform 0.2s ease;
+}
+
+button:hover {
+  background-color: #369f6d;
+  transform: scale(1.05);
+}
+
+button:disabled {
+  background-color: #ccc;
+  cursor: not-allowed;
+}
+
+span {
+  font-size: 16px;
+  font-weight: bold;
+}
+</style>
Index: moviewsd/src/components/MovieList.vue
===================================================================
diff --git a/moviewsd/src/components/MovieList.vue b/moviewsd/src/components/MovieList.vue
--- a/moviewsd/src/components/MovieList.vue	(revision 90f72503ed57f154bb86d80fc8d76efed5abd3ce)
+++ b/moviewsd/src/components/MovieList.vue	(date 1732553715143)
@@ -1,0 +1,28 @@
+<template>
+  <div class="movie-list">
+    <MovieCard
+        v-for="movie in movies"
+        :key="movie.id"
+        :movie="movie"
+    />
+  </div>
+</template>
+
+<script setup>
+import { defineProps } from "vue";
+import MovieCard from "@/components/MovieCard.vue";
+
+defineProps({
+  movies: Array,
+});
+</script>
+
+<style scoped>
+.movie-list {
+  display: grid;
+  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
+  gap: 20px;
+  padding: 20px;
+  justify-content: center;
+}
+</style>
Index: moviewsd/src/components/TrendControls.vue
===================================================================
diff --git a/moviewsd/src/components/TrendControls.vue b/moviewsd/src/components/TrendControls.vue
--- a/moviewsd/src/components/TrendControls.vue	(revision 90f72503ed57f154bb86d80fc8d76efed5abd3ce)
+++ b/moviewsd/src/components/TrendControls.vue	(date 1732553715140)
@@ -1,0 +1,59 @@
+<template>
+  <div class="trend-controls">
+    <button
+        v-for="option in viewOptions"
+        :key="option.value"
+        :class="{ active: option.value === currentView }"
+        @click="changeView(option.value)"
+    >
+      {{ option.label }}
+    </button>
+  </div>
+</template>
+
+<script setup>
+defineProps({
+  movies: Array,
+});
+
+const emits = defineEmits(["change-view"]);
+
+const viewOptions = [
+  { label: "Table View", value: "table" },
+  { label: "Infinite Scroll", value: "infinite" },
+];
+
+const changeView = (view) => {
+  emits("change-view", view);
+};
+</script>
+
+<style scoped>
+.trend-controls {
+  display: flex;
+  justify-content: center;
+  margin: 20px 0;
+}
+
+button {
+  margin: 0 10px;
+  padding: 10px 20px;
+  background-color: #42b983;
+  color: white;
+  border: none;
+  border-radius: 4px;
+  cursor: pointer;
+  font-size: 14px;
+  transition: background-color 0.3s ease, transform 0.2s ease;
+}
+
+button:hover {
+  background-color: #369f6d;
+  transform: scale(1.05);
+}
+
+button.active {
+  background-color: #1e90ff;
+  transform: scale(1.1);
+}
+</style>
Index: moviewsd/src/components/ScrollToTop.vue
===================================================================
diff --git a/moviewsd/src/components/ScrollToTop.vue b/moviewsd/src/components/ScrollToTop.vue
--- a/moviewsd/src/components/ScrollToTop.vue	(revision 90f72503ed57f154bb86d80fc8d76efed5abd3ce)
+++ b/moviewsd/src/components/ScrollToTop.vue	(date 1732552637435)
@@ -1,0 +1,54 @@
+<template>
+  <button
+      v-if="isVisible"
+      class="scroll-to-top"
+      @click="scrollToTop"
+  >
+    ▲
+  </button>
+</template>
+
+<script setup>
+import { ref, onMounted, onUnmounted } from "vue";
+
+const isVisible = ref(false);
+
+const handleScroll = () => {
+  isVisible.value = window.scrollY > 300;
+};
+
+const scrollToTop = () => {
+  window.scrollTo({ top: 0, behavior: "smooth" });
+};
+
+onMounted(() => {
+  window.addEventListener("scroll", handleScroll);
+});
+
+onUnmounted(() => {
+  window.removeEventListener("scroll", handleScroll);
+});
+</script>
+
+<style scoped>
+.scroll-to-top {
+  position: fixed;
+  bottom: 50px;
+  right: 20px;
+  padding: 10px 15px;
+  background-color: #42b983;
+  color: white;
+  border: none;
+  border-radius: 50%;
+  font-size: 18px;
+  font-weight: bold;
+  cursor: pointer;
+  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
+  transition: transform 0.2s ease, background-color 0.2s ease;
+}
+
+.scroll-to-top:hover {
+  transform: scale(1.1);
+  background-color: #369f6d;
+}
+</style>
